name: Deploy to GCP

on:
  push:
    branches: [ "main" ]

env:
  GCP_PROJECT_ID:         ${{secrets.GCP_PROJECT_ID}}
  GCP_PROJECT_NUMBER:     ${{secrets.GCP_PROJECT_NUMBER}}
  WRKL_ID_PROVIDER:       ${{secrets.WRKL_ID_PROVIDER}}
  GCP_SA_EMAIL:           ${{secrets.GCP_SA_EMAIL}}
  TERRAFORM_STATE_BUCKET: ${{vars.TERRAFORM_STATE_BUCKET}}
  TF_VAR_GCP_PROJECT_ID:  ${{secrets.GCP_PROJECT_ID}}
  #TF_CLI_ARGS_init:       ""



jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # Configure Workload Identity Federation and generate an access token.
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        token_format: 'access_token'
        workload_identity_provider: "${{env.WRKL_ID_PROVIDER}}"
        service_account: ${{env.GCP_SA_EMAIL}}

    #- name: Pipeline script A
    #  run: bash ./scripta.sh

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: 'Use gcloud CLI'
      run: 'gcloud info'      

    - name: Get TF State Bucket Name
      id: print_tf_bucket_name
      run: | 
        echo "This is the TERRAFORM_STATE_BUCKET: $TERRAFORM_STATE_BUCKET"

    - name: Terraform Init
      id: init
      working-directory: ./terraform
      #run: terraform init -backend-config="bucket=gs://${{env.TERRAFORM_STATE_BUCKET}}" -backend-config="prefix=terraform/state"
      run: | 
        export TF_CLI_ARGS_init="-backend-config='bucket=gs://${{env.TERRAFORM_STATE_BUCKET}}'"
        export TF_CLI_ARGS_init="$TF_CLI_ARGS_init -backend-config='prefix=terraform/state'" 
        terraform init
        